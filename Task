const spinValues = [
    { minDegree: 61, maxDegree: 90, value: 0 },
    { minDegree: 321, maxDegree: 350, value: 10 },
    { minDegree: 271, maxDegree: 300, value: 30 },
    { minDegree: 241, maxDegree: 270, value: 50 },
    { minDegree: 211, maxDegree: 240, value: 140 },
    { minDegree: 181, maxDegree: 210, value: 100 },
    { minDegree: 151, maxDegree: 180, value: 500 },
    { minDegree: 121, maxDegree: 150, value: 4000 },
    { minDegree: 91, maxDegree: 120, value: 1000 },
];

const spinWheel = document.getElementById("spinWheel");
const spinBtn = document.getElementById("spin_btn");
const amountInput = document.getElementById("amount");
const text = document.getElementById("text");

// Function to enable/disable spin button based on bet amount
const toggleSpinButton = () => {
    const betAmount = parseInt(amountInput.value, 10);
    if (!isNaN(betAmount) && betAmount > 0 && betAmount <= <?php echo $balance ?>) {
        spinBtn.disabled = false;
    } else {
        spinBtn.disabled = true;
    }
};

// Event listener for form submission (bet placement)
document.getElementById('form').addEventListener('submit', (e) => {
    e.preventDefault(); // Prevent form submission for now, handled by PHP
    toggleSpinButton(); // Check if spin button should be enabled
});

// Function to generate the final value based on spin result
const generateFinalValue = (targetDegree) => {
    let finalValue = 0;
    for (let i of spinValues) {
        if (targetDegree >= i.minDegree && targetDegree <= i.maxDegree) {
            finalValue = i.value;
            break;
        }
    }
    return finalValue;
};

// Event listener for spin button click
spinBtn.addEventListener("click", () => {
    const betAmount = parseInt(amountInput.value, 10);
    const targetDegree = getTargetDegree(betAmount); // Assuming getTargetDegree function is defined

    // Simulate AJAX request to PHP backend to process spin (update balance and get final value)
    fetch('process_spin.php', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify({ betAmount: betAmount, targetDegree: targetDegree }),
    })
    .then(response => response.json())
    .then(data => {
        const finalValue = data.finalValue;
        text.innerHTML = `<p>Congratulations, You Have Won KES ${finalValue} </p>`;
        // Update PHP variable $final (optional, depending on your further PHP processing needs)
        <?php
        echo "const final = " . json_encode($final) . ";";
        ?>
    })
    .catch(error => {
        console.error('Error:', error);
    });

    // Disable spin button after spinning until a new bet is placed
    spinBtn.disabled = true;
});